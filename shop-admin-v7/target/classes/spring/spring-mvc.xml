<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/mvc
    	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <mvc:annotation-driven/>
    <!--扫描控制层-->
    <context:component-scan base-package="com.fh.admin.controller"/>
    <!-- 扫描异常包下 -->
    <context:component-scan base-package="com.fh.admin.exception"/>

    <!--内部视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 文件上传  -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10485760"/>
        <property name="maxInMemorySize" value="4096" />
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>

    <bean id="tm" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceInfo"/>
    </bean>
    <!-- 配置事务的传播特性 -->
    <tx:advice id="ta" transaction-manager="tm"><!-- 配置事务管理器 -->
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="del*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="*" read-only="true"/>
            <!-- 如果不是以上三种，则配置成只读事务(如select)。只读事务可以提高性能，当更新某个对象时，将不会再做脏数据检查。(因为是只读的并不用更新，所以不用再作比较,判断是否读取到脏数据。) -->
        </tx:attributes>
    </tx:advice>
    <!-- .. 代表改包下任意嵌套层次的子包 -->
    <aop:config>
        <aop:advisor pointcut="execution(* com.fh.admin.biz..*.*(..))" advice-ref="ta"/>
    </aop:config>

    <mvc:interceptors>
        <mvc:interceptor>
            <!-- /**的意思是所有文件夹及里面的子文件夹
            /*是所有文件夹，不含子文件夹
            /是web项目的根目录 -->
            <mvc:mapping path="/**" />
            <!--  需排除拦截的地址 -->
            <mvc:exclude-mapping path="/user/login.jhtml"/>
            <mvc:exclude-mapping path="/user/forgetPassword.jhtml"/>
            <bean id="loginInterceptor" class="com.fh.admin.interceptor.LogInterceptor"></bean> <!-- 这个类就是我们自定义的Interceptor -->
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  -->
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/user/login.jhtml"/>
            <mvc:exclude-mapping path="/user/forgetPassword.jhtml"/>
            <bean id="permissionInterceptor" class="com.fh.admin.interceptor.PermissionInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <bean id="logSection" class="com.fh.admin.section.LogSection"></bean>

    <aop:config>
        <aop:aspect ref="logSection">
            <aop:pointcut id="logAop" expression="execution(* com.fh.admin.controller..*.add*(..))||execution(* com.fh.admin.controller..*.upda*(..))||execution(* com.fh.admin.controller..*.dele*(..))"></aop:pointcut>
            <aop:around method="doLog" pointcut-ref="logAop"></aop:around>
        </aop:aspect>
    </aop:config>

</beans>